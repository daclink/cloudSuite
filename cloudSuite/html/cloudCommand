<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of bucket.php
 *
 * @author Drew A. Clinkenbeard
 */
?>
<?php

if (file_exists(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'config.php')) {
    include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'config.php';
}
include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'cs' . DIRECTORY_SEPARATOR . 'cloudsuite.class.php';

include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'aws' . DIRECTORY_SEPARATOR . 'sdk-1.5.15' . DIRECTORY_SEPARATOR . 'sdk.class.php';
$_ENV['cs']['debug'] = FALSE;

require 'Slim/Slim.php';

$app = new Slim();

$app->post('/shareLab', function() {
          echo "post Dist lab";
          print_r($_POST);
          shareLab();
        });


$app->get('/', function() {
            echo '<META HTTP-EQUIV="Refresh" Content="10; URL=http://www.cloudsuite.info">';
            echo '<div> <a href="http://www.cloudsuite.info">Click here if you are not redirected in 10 seconds</a></div>';
        });

$app->post('/testFunc/:func', function ($func) {
            switch ($func) {
                case "ec2" :
                    ec2();
                    break;
                case "s3" :
                    s3();
                    break;
                default :
                    defaulto();
                    break;
            }
        });

$app->get('/listMods/:user', function ($user) {
            listUserMods($user);
        });

$app->post('/queue/:labName', function ($labName) {
            echo queue($labName);
        });
$app->get('/modForm/', function () {
            print_r($_GET);


            echo "<pre>";
            $paramString = "";
            echo "key\t==\tvalue\n";
            foreach ($_GET as $key => $value) {
                $paramString = $paramString . $key . " ";
                echo "$key";
                if (is_array($value)) {
                    foreach ($value as $key2 => $value2) {
                        echo "\t==\t$value2\n\t";
                        $paramString = $paramString . $value2 . ",";
                    }
                } else {
                    echo "\t==\t$value\n";
                    $paramString = $paramString . $value;
                }
                $paramString = $paramString . " ";
            }
            echo "</pre>";
            echo "<pre>";
            echo "\nparamstring == $paramString\n";
            echo "</pre>";
        });

$app->get('/queue', function() {

            $s3 = Utils::getS3Instance();

            $bucket = 'cloudsuite.labs';
            $response = $s3->get_object_list($bucket);
            $ret = "";
            foreach ($response as $key => $value) {
                $ret = $ret . "<div class='queued-content'>$value </div>";
            }
            if ($ret == "") {
                $ret = "<div class='queued-content'>No Queued Labs.</div>";
            }
            echo $ret;
        });

//!!!
$app->get('/labTest/:user', function($user) {
            echo "<pre>";

            echo"user : $user\n";
            //echo"lab : $lab\n";
            cloudLabList($user);

            echo "</pre>";
        });

$app->get('/loadLab/:uname/:lab', function($uname, $lab) {
            getLab($uname, $lab);
        });


$app->get('/saveLab/:uname/:filename', function($uname, $filename) {
            //loadLab($user, $lab);
            $bucket = "cs.user." . strtolower($uname) . ".labs";
            //$lab = Lab::cloudLoadLab($fileName);

            echo Lab::cloudWriteLab($filename, $bucket);
        });

$app->get('/renameLab/:uname/:filename', function($uname, $filename) {
            //loadLab($user, $lab);
            echo "blah";
            $bucket = "cs.user." . strtolower($uname) . ".labs";
            //$lab = Lab::cloudLoadLab($fileName);

            echo Lab::cloudWriteLab($filename, $bucket, true);
        });

$app->get('/distLab/:uname', function($uname) {
            shareList($uname);
        });

$app->get('/server/:uname', function($uname){
    
    echo Utils::getServerStatus($uname);
    
    
});
        
$app->get('/labList/:uname', function($uname) {
            cloudLabList($uname);
        });
       
$app->get('/cloudMod/:bucket/:key/:labname', function($bucket,$key,$labname){
    
    //echo "<div>bucket == $bucket</div>\n";
   // echo "<div>key == $key</div>\n";
   // echo "<div>labname == $labname</div>";
    
    Module::loadDataModule($bucket, $key, $labname);
    
});

$app->put('/startServer/:uname/:instance_id',function($uname, $instance_id){
            startServer($uname, $instance_id);
});

$app->put('/stopServer/:uname/:instance_id',function($uname, $instance_id){
            stopServer($uname, $instance_id);
});
        
$app->delete('/lab/:owner/:filename', function($owner, $filename) {
            return Lab::cloudRM($owner, $filename);
        });
        
$app->delete('/datamod/:filename/:bucket', function($filename, $bucket){
   
    //$bucket = $_ENV['cs']['datawarehouse'];
    $bucket = strtolower($bucket);
     return Module::delDataMod($filename, $bucket);
    
});

$app->get('/labLister/:uname', function($uname){
    Lab::cloudListLabs($uname);
});


/* SUPER IMPORTANT */
$app->run();
/* SUPER IMPORTANT */


/*
 * helper functions defined below. 
 */

function ec2() {
    $ec2 = new AmazonEC2(array(
     
            ));


    $instance_id = 'i-6f8d0812';

    $response = $ec2->start_instances($instance_id);

    var_dump($response->isOK());

    if ($response->isOK()) {
        echo $response->isOK();
        $ec2->stop_instances($instance_id);
    }
}

function queue($filename) {

    $s3 = new AmazonS3(array(

            ));


    $bucket = 'cloudsuite.labs';
    //$filename = '1987.ajs.xml';
    // var_dump($response);

    $lab = file_get_contents($_ENV['cs']['labs_dir'] . $filename);

    $response = $s3->create_object($bucket, $filename, array('body' => $lab));

    //$response = $s3->delete_all_objects($bucket);

    if ($response->isOK()) {

        return 1;
    } else {
        return 0;
    }
}

function s3() {

    $s3 = new AmazonS3(array(

            ));

    $bucket = 'cloudsuite.labs';

    $response = $s3->get_object_list($bucket);
    echo("<pre>");
    print_r($response);


    //if ($response->isOK()) {
    $response = $s3->get_object_list($bucket);
    //       return var_dump($response);
    $ret = "";
    foreach ($response as $key => $value) {
        echo "hi!";
        $ret = $ret . "<div class='queued-content'>$value </div>";
    }
    // print_r($ret);
    echo $ret;
    echo("</pre>");
    // }

    /*
      $filename = '1987.ajs.xml';

      var_dump($response);

      $lab = file_get_contents($_ENV['cs']['labs_dir'] . $filename);

      $response = $s3->create_object($bucket, $filename, array('body' => $lab));

      $response = $s3->delete_all_objects($bucket);

      var_dump($response->isOK());
     * 
     */
}

function listUserMods($user) {

    $s3 = Utils::getS3Instance();

    $bucket = "cs.$user.modules.data";

    if (!$s3->if_bucket_exists($bucket)) {
        echo "No bucket found";
    }

//    $response = $s3->list_objects($bucket);
    $response = $s3->list_objects($bucket, array('prefix' => 'modules/'));

    //$resArray = $response->body->to_array();

    echo "<pre>";

    echo "<div> Response body</div>";

    print_r($response);

    echo "</pre>";
}

//remove this !!!
function writeLabTest() {
    $s3 = Utils::getS3Instance();
}

function readLabTest($user, $lab) {

    $s3 = Utils::getS3Instance();

    $bucket = "cs.user." . strtolower($user) . ".labs";
    //$bucket = strtolower($bucket);
    echo "Bucket == $bucket";
    $response = $s3->get_object($bucket, $lab);

    if (!$response->isOK()) {
        return false;
    }
    echo "<h1>Response is:</h1>";
    print_r($response);
    $xmlFile = $response->body;
    echo "<h1>xmlFile is:</h1>";
    print_r($xmlFile);
    $schema = $xmlSchema = $_ENV['cs']['schema_dir'] . 'lab.xsd';
    echo "valid? = " . Utils::validate($schema, $xmlFile, true);
}

function getLab($user, $lab) {

    $s3 = Utils::getS3Instance();

    $bucket = "cs.user." . strtolower($user) . ".labs";
    //$bucket = strtolower($bucket);
    // echo "Bucket == $bucket";
    $response = $s3->get_object($bucket, $lab);


    if (!$response->isOK()) {
        return false;
    }

    echo Utils::formatLab($response->body, TRUE);

    /*
      echo "<h1>Response is:</h1>";
      print_r($response);
      $xmlFile = $response->body;
      echo "<h1>xmlFile is:</h1>";
      print_r($xmlFile);
      $schema = $xmlSchema = $_ENV['cs']['schema_dir'] . 'lab.xsd';
      echo "valid? = " . Utils::validate($schema, $xmlFile, true);
     */
}

function loadLab($uname, $lab) {
    $s3 = Utils::getS3Instance();
    $bucket = "cs.user." . strtolower($user) . ".labs";
}

function shareTest() {
    print_r($_POST);
}

function shareLab() {
    $s3 = Utils::getS3Instance();

    $source = array('bucket' => '',
        'filename' => '');
    $dest = $source;

    if (!isset($_POST['uname'])) {
        return false;
    }
    
    $source['bucket'] = 'cs.user.' . strtolower($_POST['uname']) . '.labs';

    foreach ($_POST['labDist'] as $lab) {
        
        $source['filename'] = $lab;
        $dest['filename'] = $lab;
        foreach ($_POST['userDistBox'] as $user) {
            $dest['bucket'] = 'cs.user.' . strtolower($user) . '.labs';
            $response = $s3->copy_object($source, $dest);
            //print_r($response);
            echo Lab::cloudCHOWN($user, $lab);
        
        }
    }
}

function defaulto() {
    echo "post :";
    print_r($_POST);
    echo "\n<b/>";
    echo "get :";
    print_r($_GET);
    echo "\n<b/>";
}

function cloudLabList($uname) {
    //echo $_GET['listLab'];
    $s3 = Utils::getS3Instance();
    $bucket = "cs.user." . strtolower($uname) . ".labs";

    $labs = $s3->get_object_list($bucket);
    // print_r($labs);
    natcasesort($labs);
    foreach ($labs as $lab) {
        // echo "Lab is " . $lab;

        $data = $s3->get_object($bucket, $lab)->body;
        $xml = simplexml_load_string($data);
        $owner = $xml->owner;

        if ($owner == $uname) {
            $parts = explode(".", $lab);

            $desc = "Labname : " . $xml['labName'] . " <br/> ";
            $desc = $desc . "Owner : " . $owner . " <br/> ";
            $desc = $desc . "Description : " . (String) $xml->description . "<br/>";
            $desc = $desc . "ID : " . $parts[0];

            echo "<script>var $parts[0] = $lab </script>";
            echo"<div id=\"$parts[0]\" class=\"labChoice lab-content csshadow chiClick\" name=\"$lab\" onclick=\"loadLabReturnNormal('$parts[0]','$parts[1]')\">$desc</div>";
        }
    }
}

function shareList($uname) {
    $s3 = Utils::getS3Instance();
    
    if (strtolower($uname) != 'aj') {

        return;
    }
    echo "<h2>Distribute Labs </h2>";
    echo '<form id="labDistForm"method="post">';
    echo "<input id='uname' type='hidden' value='$uname' name='uname' />";

    $bucket = "cs.user";
    $users = $s3->get_object_list($bucket);
    //print_r($users);
    echo "<fieldset> <legend> Users </legend>";
    foreach ($users as $user) {
        //echo "<div> $user </div>";
        if (strtolower($user) != strtolower($uname)) {
            echo "<div class='dist-lab-user'>";
            echo "<input id=\"$user\" name=\"userDistBox[]\" type=\"checkbox\" value=\"$user\"/>$user</input>";
            echo "<div> &nbsp</div>";
            echo "</div>";
        }
    }
    echo "</fieldset>";

    $bucket = "cs.user." . strtolower($uname) . ".labs";
    $labs = $s3->get_object_list($bucket);
    // print_r($labs);
    natcasesort($labs);
    echo "<fieldset> <legend> Labs </legend>";
    foreach ($labs as $lab) {
        // echo "Lab is " . $lab;

        $data = $s3->get_object($bucket, $lab)->body;
        $xml = simplexml_load_string($data);
        // print_r($xml);
        $owner = $xml->owner;

        if ($owner == $uname) {
            $parts = explode(".", $lab);
            $desc = "Labname : " . $xml['labName'] . " <br/> ";
            $desc = $desc . "Description : " . (String) $xml->description . "<br/>";
            echo "<div class=\"lab-dist\">";
            echo"<input id=\"$parts[0]\" name=\"labDist[]\" type=\"checkbox\" value=\"$lab\">$lab</input>";
            echo "<div>$desc</div>";
            echo "</div>";
            echo "<hr>";
        }//echo"<input id=\"$parts[0]\" class=\"labChoice lab-content csshadow chiClick\" name=\"$lab\" value=\"$lab\">$desc</input>";
    }
    echo "</fieldset>";

    //echo '<input id="distLabButton" type="submit" class="chiClick csshadow" value="Distribute Labs" />';
    //echo '<button id="shareLabButton" >Distribute Labs</button>';

    echo '</form>';
}

function rmLab($owner, $filname) {
    return Lab::cloudRM($owner, $filename);
}

function startServer($uname, $instance_id= 'i-6f8d0812') {
     $instance_id = 'i-6f8d0812';

    $ec2 = Utils::getEC2Instance();
     
    $response = $ec2->start_instances($instance_id);
    
    Utils::getServerStatus($uname);
}

function stopServer($uname, $instance_id= 'i-6f8d0812') {
     
    $ec2 = Utils::getEC2Instance();
     
    $response = $ec2->stop_instances($instance_id);
    
    
    //Utils::getServerStatus($uname);
}

?> 
